# [`count()`]{.blue}
.center[[`count`]{.blue}`(table, variables)`]
`dplyr` can do fancy summary statistics but [`count()`]{.blue} is quick, easy and useful for frequency counts:
.pull-left-60[
```{r theCountTable, eval = FALSE}
laryngectomy %>%
  mutate(isMale = 2 - gender ) %>%
  mutate(sex = as.character(isMale)) %>%
  mutate(sex = fct_recode(sex,
                          "Female" = "0",
                          "Male" = "1")) %>%
  mutate(stage = fct_recode(as.character(int_stg),
                          "T1" = "1",
                          "T2" = "2",
                          "T3" = "3",
                          "T4" = "4",
                          "Unknown" = "5")) %>%
  `count(sex, stage)` %>%
  arrange(sex, stage)  # this just sorts by sex then stage
```
]
.pull-right-36[
```{r echo=FALSE}
laryngectomy %>%
  mutate(isMale = 2 - gender ) %>%
  mutate(sex = as.character(isMale)) %>%
  mutate(sex = fct_recode(sex,
                          "Female" = "0",
                          "Male" = "1")) %>%
  mutate(stage = fct_recode(as.character(int_stg),
                          "T1" = "1",
                          "T2" = "2",
                          "T3" = "3",
                          "T4" = "4",
                          "Unknown" = "5")) %>%
  count(sex, stage) %>%
  arrange(sex, stage)
```
]
 
 
### NA{.center} 
 
# What it does 
NA  
 
# Demo code 
NA  
 
# Usefull stuff 
NA  
 
# Common Problems 
NA  
 
# Related Functions 
NA  
