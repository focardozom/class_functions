# Function name: count()
# Notes:
# [`count()`]
[[`count`]`(table, variables)`]
`dplyr` can do fancy summary statistics but [`count()`] is quick, easy and useful for frequency counts:
.pull-left-60[
```{r theCountTable, eval = FALSE}
laryngectomy %>%
  mutate(isMale = 2 - gender ) %>%
  mutate(sex = as.character(isMale)) %>%
  mutate(sex = fct_recode(sex, 
                          "Female" = "0", 
                          "Male" = "1")) %>% 
  mutate(stage = fct_recode(as.character(int_stg), 
                          "T1" = "1", 
                          "T2" = "2",
                          "T3" = "3",
                          "T4" = "4",
                          "Unknown" = "5")) %>% 
  `count(sex, stage)` %>% 
  arrange(sex, stage)  # this just sorts by sex then stage
```
]
.pull-right-36[
```{r eval = FALSE, echo=FALSE}
laryngectomy %>%
  mutate(isMale = 2 - gender ) %>%
  mutate(sex = as.character(isMale)) %>%
  mutate(sex = fct_recode(sex, 
                          "Female" = "0", 
                          "Male" = "1")) %>% 
  mutate(stage = fct_recode(as.character(int_stg), 
                          "T1" = "1", 
                          "T2" = "2",
                          "T3" = "3",
                          "T4" = "4",
                          "Unknown" = "5")) %>% 
  count(sex, stage) %>% 
  arrange(sex, stage)
```
]
---


# The count Function 

The count function is a useful tool for summarizing data in R. It allows you to quickly count the number of occurrences of an item or items in a vector. It is particularly helpful when working with categorical data. 

The count function is contained in the dplyr package. It is important to ensure that the dplyr package is loaded before you try to use the count function.

It is best to use the count function when you have categorical data or data that can be easily divided into categories and you want to quickly