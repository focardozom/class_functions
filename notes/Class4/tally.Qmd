# [`tally()`]{.blue}
 
 
### [tally]{.blue}(dataset, variable){.center} 
 
# What it does 

It adds up the values:
  
 
# Demo code 

.pull-left-60[
```{r theTallyTable, eval = FALSE}
sexVars <- laryngectomy %>%
  mutate(isMale = 2 - gender ) %>%
  mutate(sex = as.character(isMale)) %>%
  mutate(sex = fct_recode(sex,
                          "Female" = "0",
                          "Male" = "1"))
  sexVars %>% `tally(gender)`  # adds up 1s and 2s
  sexVars %>% `tally(isMale)`  # adds up 0s and 1s
# sexVars %>% tally(sex)  # can't sum up "Male" and "Female"
```
]
.pull-right-36[
```{r theTallyTableOut, eval = FALSE, echo=FALSE}
sexVars <- laryngectomy %>%
  mutate(isMale = 2 - gender ) %>%
  mutate(sex = as.character(isMale)) %>%
  mutate(sex = fct_recode(sex,
                          "Female" = "0",
                          "Male" = "1"))
  sexVars %>% tally(gender)  # adds up 1s and 2s
  sexVars %>% tally(isMale)  # adds up 0s and 1s
```
]
  
 
# Usefull stuff 

???
This was a good trick...
r theTallyTable, eval = FALSE
r theTallyTableOut, ref.label="theTallyTable", echo=FALSE
.related-functions[]
  
 
# Common Problems 

  
 
# Related Functions 
NA  
